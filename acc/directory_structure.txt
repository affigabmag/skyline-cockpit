Python Project Structure Documentation
Generated: 2025-09-20 18:35:36
Project: C:\Sources\skyline-cockpit2\skyline-cockpit
==================================================

skyline-cockpit/
+-- acc/
|   +-- doc_consolidated.ps1 (25.16 KB)
+-- db/
|   +-- crane_data.db (7660 KB)
|   |       Table: crane_data
|   |           Rows: 35429
|   |           datetime_str : TEXT
|   |           utc_time : TEXT
|   |           date_str : TEXT
|   |           time_str : TEXT
|   |           position_x : REAL
|   |           position_y : REAL
|   |           position_z : REAL
|   |           slew : REAL
|   |           jib : REAL
|   |           hoist : REAL
|   |           weight : REAL
|   |           wind : REAL
|   |           cable_weight : REAL
|   |           seconds : INTEGER
|   |           controller_is_moving : INTEGER
|   |           controller_direction : INTEGER
|   |           controller_g2 : INTEGER
|   |           controller_g3 : INTEGER
|   |           is_prev : TEXT
|   |           weight_rounded : REAL
|   |           weight_fixed : REAL
|   |           weight_smooth : REAL
|   |           weight_by_controller_direction : REAL
|   |           is_moving : INTEGER
|   |           is_loaded : INTEGER
|   |           state : TEXT
|   |           state_grouping : REAL
|   |           grouping_lifting_events : REAL
|   |           grouping_moving_events : REAL
|   +-- create_db.sql (0.68 KB)
|   +-- sample_data.csv (9808.97 KB)
+-- static/
|   +-- dashboard.css (4.73 KB)
|   +-- dashboard.js (6.57 KB)
+-- templates/
|   +-- dashboard.html (3.74 KB)
+-- .gitignore (4.78 KB)
+-- database.py (7.75 KB)
|           import sqlite3
|           import os
|           from typing import List, Dict, Any
|           from datetime import datetime, timedelta
|   
|           def get_db_connection()
|               '''Get a connection to the SQLite database.'''
|           # Constants:
|           DATABASE_PATH
+-- LICENSE (1.07 KB)
+-- main.py (5.74 KB)
|           from fastapi import FastAPI, Query
|           from fastapi.responses import HTMLResponse, Response
|           from fastapi.staticfiles import StaticFiles
|           from database import get_database_info, get_available_dates, get_daily_report_data
|           from datetime import datetime
|           import json
|   
|           def read_root()
|           def get_report()
|           def get_dashboard()
|           def health_check()
|           def get_available_dates_endpoint()
|           def read_user()
|           def create_user()
|           def custom_docs()
+-- README.md (9.74 KB)
+-- requirements.txt (0.06 KB)
            # Python Dependencies:
            fastapi==0.116.2
            uvicorn[standard]==0.35.0
            sqlalchemy==2.0.43
